.build:
  stage: build
  script:
    - docker build . -t $DOCKER_IMAGE_REPO:$TAG --build-arg BUILD=$BUILD --build-arg CI_COMMIT_SHA=$CI_COMMIT_SHA
    - docker save $DOCKER_IMAGE_REPO:$TAG > image.tar
  artifacts:
    paths:
      - image.tar
    expire_in: 1 day
  rules:
    - <<: *commit-branch

.deploy:
  stage: deploy
  script:
    - docker load < image.tar
  after_script:
    - docker push $DOCKER_IMAGE_REPO:$TAG
  rules:
    - <<: *commit-branch

.prod-build:
  extends: .build
  rules:
    - <<: *release-branch
    - <<: *commit-tag

.prod-deploy:
  extends: .deploy
  rules:
    - <<: *release-branch
    - <<: *commit-tag

.android:
  variables:
    APP_ENV=android

.android-rule: &android-rule
  if: $ANDROID_KEYSTORE != null

.commit-branch: &commit-branch
  if: $CI_COMMIT_BRANCH == $BANCH

.release-branch: &release-branch
  if: $CI_COMMIT_BRANCH =~ /^release\/\d+\.\d+$/

.commit-tag: &commit-tag
  if: $CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/

.build-android:
  extends:
    - .build
    - .android
  script:
    - docker build . -t $DOCKER_IMAGE_REPO:$TAG --build-arg ANDROID_ALIAS=${ANDROID_ALIAS} --build-arg ANDROID_STORE_PASSWORD=${ANDROID_STORE_PASSWORD} --build-args ANDROID_KEYSTORE=${ANDROID_KEYSTORE} --build-arg BUILD=${BUILD} --build-arg APP_ENV=android
    - docker save $DOCKER_IMAGE_REPO:$TAG > image.tar
  rules:
    - <<: *commit-branch
    - <<: *android-rule

.deploy-android:
  extends:
    - .deploy
    - .android
  after_script:
    - ID=$(docker create $DOCKER_IMAGE_REPO:$TAG)
    - docker cp $ID:/app/platforms/android/app/build/outputs/apk/debug/apk-debug.apk .
    - docker rm -f $ID
    # cp apk to google cloud storage
  rules:
    - <<: *commit-branch
    - <<: *android-rule

.prod-build-android:
  extends: .build-android
  rules:
    - <<: *release-branch
    - <<: *android-rule

.prod-deploy-android:
  extends: .deploy-android  
  rules:
    - <<: *release-branch
    - <<: *android-rule